--
-- postgreSql
-- new_test
--
\set ECHO none
\i sql/14.0/new_test.sql
--
-- new tcs
--
--Testcase 1:
CREATE EXTENSION IF NOT EXISTS :DB_EXTENSIONNAME;
--Testcase 2:
CREATE SERVER :DB_SERVERNAME FOREIGN DATA WRAPPER :DB_EXTENSIONNAME
  OPTIONS (odbc_DRIVER :DB_DRIVERNAME, odbc_SERVER :DB_SERVER, odbc_port :DB_PORT, odbc_DATABASE :DB_DATABASE);
--Testcase 3:
CREATE USER MAPPING FOR public SERVER :DB_SERVERNAME OPTIONS (odbc_UID :DB_USER, odbc_PWD :DB_PASS);
--Primary key options
--Testcase 4:
CREATE FOREIGN TABLE tbl01 (id bigint  OPTIONS (key 'true'), c1 int)
  SERVER :DB_SERVERNAME OPTIONS (schema :DB_SCHEMA, table 'tbl01');
--Testcase 5:
EXPLAIN VERBOSE
INSERT INTO tbl01 VALUES (166565, 1);
                              QUERY PLAN                              
----------------------------------------------------------------------
 Insert on public.tbl01  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO "public"."tbl01"("id", "c1") VALUES (?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=12)
         Output: '166565'::bigint, 1
(4 rows)

--Testcase 6:
INSERT INTO tbl01 VALUES (166565, 1);
--Testcase 7:
EXPLAIN VERBOSE
INSERT INTO tbl01 (c1) VALUES (3);
                              QUERY PLAN                              
----------------------------------------------------------------------
 Insert on public.tbl01  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO "public"."tbl01"("id", "c1") VALUES (?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=12)
         Output: NULL::bigint, 3
(4 rows)

--Testcase 8:
INSERT INTO tbl01 (c1) VALUES (3); --fail
psql:sql/14.0/new_test.sql:25: ERROR:  Executing ODBC query
ERROR: null value in column "id" of relation "tbl01" violates not-null constraint
DETAIL: Failing row contains (null, 3).;
Error while executing the query
--Testcase 9:
EXPLAIN VERBOSE
INSERT INTO tbl01 VALUES (null, 4);
                              QUERY PLAN                              
----------------------------------------------------------------------
 Insert on public.tbl01  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO "public"."tbl01"("id", "c1") VALUES (?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=12)
         Output: NULL::bigint, 4
(4 rows)

--Testcase 10:
INSERT INTO tbl01 VALUES (null, 4); --fail
psql:sql/14.0/new_test.sql:30: ERROR:  Executing ODBC query
ERROR: null value in column "id" of relation "tbl01" violates not-null constraint
DETAIL: Failing row contains (null, 4).;
Error while executing the query
--Testcase 11:
EXPLAIN VERBOSE
INSERT INTO tbl01 VALUES (166565, 7);
                              QUERY PLAN                              
----------------------------------------------------------------------
 Insert on public.tbl01  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO "public"."tbl01"("id", "c1") VALUES (?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=12)
         Output: '166565'::bigint, 7
(4 rows)

--Testcase 12:
INSERT INTO tbl01 VALUES (166565, 7); --fail, duplicate key
psql:sql/14.0/new_test.sql:35: ERROR:  Executing ODBC query
ERROR: duplicate key value violates unique constraint "tbl01_pkey"
DETAIL: Key (id)=(166565) already exists.;
Error while executing the query
--Testcase 13:
CREATE FOREIGN TABLE tbl02 (id char(255)  OPTIONS (key 'true'), c1 INT, c2 float8, c3 boolean)
  SERVER :DB_SERVERNAME OPTIONS (schema :DB_SCHEMA, table 'tbl02');
--Testcase 14:
EXPLAIN VERBOSE
INSERT INTO tbl02 VALUES (repeat('a', 255), 1, 12112.12, true);
                                                                                                                                                                QUERY PLAN                                                                                                                                                                
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on public.tbl02  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO "public"."tbl02"("id", "c1", "c2", "c3") VALUES (?, ?, ?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=1037)
         Output: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'::character(255), 1, '12112.12'::double precision, true
(4 rows)

--Testcase 15:
INSERT INTO tbl02 VALUES (repeat('a', 255), 1, 12112.12, true);
--Testcase 16:
EXPLAIN VERBOSE
INSERT INTO tbl02 VALUES (NULL, 2, -12.23, false);
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Insert on public.tbl02  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO "public"."tbl02"("id", "c1", "c2", "c3") VALUES (?, ?, ?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=1037)
         Output: NULL::character(255), 2, '-12.23'::double precision, false
(4 rows)

--Testcase 17:
INSERT INTO tbl02 VALUES (NULL, 2, -12.23, false); --fail
psql:sql/14.0/new_test.sql:48: ERROR:  Executing ODBC query
ERROR: null value in column "id" of relation "tbl02" violates not-null constraint
DETAIL: Failing row contains (null, 2, -12.23, f).;
Error while executing the query
--Testcase 18:
EXPLAIN VERBOSE
INSERT INTO tbl02(c1) VALUES (3);
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Insert on public.tbl02  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO "public"."tbl02"("id", "c1", "c2", "c3") VALUES (?, ?, ?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=45)
         Output: NULL::bpchar, 3, NULL::double precision, NULL::boolean
(4 rows)

--Testcase 19:
INSERT INTO tbl02(c1) VALUES (3); --fail
psql:sql/14.0/new_test.sql:53: ERROR:  Executing ODBC query
ERROR: null value in column "id" of relation "tbl02" violates not-null constraint
DETAIL: Failing row contains (null, 3, null, null).;
Error while executing the query
--NULL test
--Testcase 75
ALTER FOREIGN TABLE tbl02 OPTIONS (SET table 'tbl02_tmp01');
--Testcase 20:
ALTER FOREIGN TABLE tbl02 ALTER COLUMN c2 SET NOT NULL;
\dS+ tbl02
                                           Foreign table "public.tbl02"
 Column |       Type       | Collation | Nullable | Default | FDW options  | Storage  | Stats target | Description 
--------+------------------+-----------+----------+---------+--------------+----------+--------------+-------------
 id     | character(255)   |           |          |         | (key 'true') | extended |              | 
 c1     | integer          |           |          |         |              | plain    |              | 
 c2     | double precision |           | not null |         |              | plain    |              | 
 c3     | boolean          |           |          |         |              | plain    |              | 
Server: postgres_server
FDW options: (schema 'public', "table" 'tbl02_tmp01')

--Testcase 21:
INSERT INTO tbl02(id, c2) VALUES ('b', NULL); -- fail
psql:sql/14.0/new_test.sql:62: ERROR:  Executing ODBC query
ERROR: null value in column "c2" of relation "tbl02_tmp01" violates not-null constraint
DETAIL: Failing row contains (b                                                               ..., null, null, null).;
Error while executing the query
--Testcase 22:
SELECT * FROM tbl02; -- no result
 id | c1 | c2 | c3 
----+----+----+----
(0 rows)

--multiple key test
--Testcase 76
ALTER FOREIGN TABLE tbl02 OPTIONS (SET table 'tbl02_tmp02');
--Testcase 23:
ALTER FOREIGN TABLE tbl02 ALTER c1 OPTIONS (key 'true'); -- now, id and c1 are key
\dS+ tbl02
                                           Foreign table "public.tbl02"
 Column |       Type       | Collation | Nullable | Default | FDW options  | Storage  | Stats target | Description 
--------+------------------+-----------+----------+---------+--------------+----------+--------------+-------------
 id     | character(255)   |           |          |         | (key 'true') | extended |              | 
 c1     | integer          |           |          |         | (key 'true') | plain    |              | 
 c2     | double precision |           | not null |         |              | plain    |              | 
 c3     | boolean          |           |          |         |              | plain    |              | 
Server: postgres_server
FDW options: (schema 'public', "table" 'tbl02_tmp02')

--Testcase 73
INSERT INTO tbl02(id, c1) VALUES ('a', 12112.12); -- ok
INSERT INTO tbl02(id, c1) VALUES ('a', 12112.12); -- fail
psql:sql/14.0/new_test.sql:75: ERROR:  Executing ODBC query
ERROR: duplicate key value violates unique constraint "tbl02_tmp02_pkey"
DETAIL: Key (id, c1)=(a                                                                                                                                                               
                                                                                               , 12112) already exists.;
Error while executing the query
--Testcase 74
INSERT INTO tbl02(id, c1) VALUES ('a', 13113.13); -- ok
--Testcase 24:
EXPLAIN VERBOSE
SELECT * FROM tbl02;
                              QUERY PLAN                              
----------------------------------------------------------------------
 Foreign Scan on public.tbl02  (cost=25.00..27.00 rows=2 width=1037)
   Output: id, c1, c2, c3
   Foreign Table Size: 2 b
   Remote SQL: SELECT "id","c1","c2","c3" FROM "public"."tbl02_tmp02"
(4 rows)

--Testcase 25:
SELECT * FROM tbl02;
                                                                                                                               id                                                                                                                                |  c1   | c2 | c3 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------+----+----
 a                                                                                                                                                                                                                                                               | 12112 |    | 
 a                                                                                                                                                                                                                                                               | 13113 |    | 
(2 rows)

--Testcase 32:
CREATE FOREIGN TABLE tbl03 (id timestamp  OPTIONS (key 'true'), c1 int)
  SERVER :DB_SERVERNAME OPTIONS (schema :DB_SCHEMA, table 'tbl03');
--Testcase 33:
EXPLAIN VERBOSE
INSERT INTO tbl03 VALUES ('2000-01-01 00:00:00', 0);
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Insert on public.tbl03  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO "public"."tbl03"("id", "c1") VALUES (?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=12)
         Output: 'Sat Jan 01 00:00:00 2000'::timestamp without time zone, 0
(4 rows)

--Testcase 34:
INSERT INTO tbl03 VALUES ('2000-01-01 00:00:00', 0);
--Testcase 35:
EXPLAIN VERBOSE
INSERT INTO tbl03 VALUES ('2000-01-01 00:00:00', 1);
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Insert on public.tbl03  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO "public"."tbl03"("id", "c1") VALUES (?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=12)
         Output: 'Sat Jan 01 00:00:00 2000'::timestamp without time zone, 1
(4 rows)

--Testcase 36:
INSERT INTO tbl03 VALUES ('2000-01-01 00:00:00', 1); --fail
psql:sql/14.0/new_test.sql:95: ERROR:  Executing ODBC query
ERROR: duplicate key value violates unique constraint "tbl03_pkey"
DETAIL: Key (id)=(2000-01-01 00:00:00) already exists.;
Error while executing the query
--WHERE clause push-down with functions in WHERE
--Testcase 37:
CREATE FOREIGN TABLE tbl04 (id INT  OPTIONS (key 'true'),  c1 float8, c2 bigint, c3 text, c4 boolean, c5 timestamp)
  SERVER :DB_SERVERNAME OPTIONS (schema :DB_SCHEMA, table 'tbl04');
--Testcase 38:
EXPLAIN VERBOSE
SELECT * FROM tbl04 WHERE abs(c1) > 3233;
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=61)
   Output: id, c1, c2, c3, c4, c5
   Filter: (abs(tbl04.c1) > '3233'::double precision)
   Foreign Table Size: 9 b
   Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(5 rows)

--Testcase 39:
SELECT * FROM tbl04 WHERE abs(c1) > 3233;
 id |    c1    |  c2  |   c3    | c4 |            c5            
----+----------+------+---------+----+--------------------------
  6 | 45021.21 | 2121 | example | f  | Fri Oct 01 00:00:00 1999
  9 |  6867.34 | 8916 | thing   | f  | Fri Oct 01 10:10:00 2010
(2 rows)

--Testcase 40:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE sqrt(c2) > sqrt(c1) AND c1 >= 0 AND c2 > 0;
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=20)
   Output: id, c1, c2
   Filter: ((tbl04.c1 >= '0'::double precision) AND (tbl04.c2 > 0) AND (sqrt((tbl04.c2)::double precision) > sqrt(tbl04.c1)))
   Foreign Table Size: 9 b
   Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(5 rows)

--Testcase 41:
SELECT id, c1, c2 FROM tbl04 WHERE sqrt(c2) > sqrt(c1) AND c1 >= 0 AND c2 > 0;
 id |    c1    |   c2   
----+----------+--------
  1 |    31.12 | 128912
  2 |  2565.56 |   6565
  4 |    55.23 |    523
  7 | 121.9741 |  23241
  8 |       75 |    316
  9 |  6867.34 |   8916
(6 rows)

--Testcase 42:
EXPLAIN VERBOSE
SELECT c1, c2 FROM tbl04 WHERE c3 || c3 != 'things thing';
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=16)
   Output: c1, c2
   Filter: ((tbl04.c3 || tbl04.c3) <> 'things thing'::text)
   Foreign Table Size: 9 b
   Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(5 rows)

--Testcase 43:
SELECT c1, c2 FROM tbl04 WHERE c3 || c3 != 'things thing';
    c1    |   c2    
----------+---------
    31.12 |  128912
  2565.56 |    6565
 -121.122 | 1829812
    55.23 |     523
    -1.12 |   22342
 45021.21 |    2121
 121.9741 |   23241
       75 |     316
  6867.34 |    8916
(9 rows)

--Testcase 44:
EXPLAIN VERBOSE
SELECT c1, id, c3 || c3 FROM tbl04 WHERE abs(c2) <> abs(c1);
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.02 rows=9 width=44)
   Output: c1, id, (c3 || c3)
   Filter: ((abs(tbl04.c2))::double precision <> abs(tbl04.c1))
   Foreign Table Size: 9 b
   Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(5 rows)

--Testcase 45:
SELECT c1, id, c3 || c3 FROM tbl04 WHERE abs(c2) <> abs(c1);
    c1    | id |       ?column?       
----------+----+----------------------
    31.12 |  1 | anystringanystring
  2565.56 |  2 | exampleexample
 -121.122 |  3 | thingthing
    55.23 |  4 | !)@(#)!_#!!)@(#)!_#!
    -1.12 |  5 | (!)JAWLFJ(!)JAWLFJ
 45021.21 |  6 | exampleexample
 121.9741 |  7 | thingthing
       75 |  8 | exampleexample
  6867.34 |  9 | thingthing
(9 rows)

--Testcase 46:
EXPLAIN VERBOSE
SELECT id + id, c2, c3 || 'afas' FROM tbl04 WHERE floor(c2) > 0;
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.05 rows=9 width=44)
   Output: (id + id), c2, (c3 || 'afas'::text)
   Filter: (floor((tbl04.c2)::double precision) > '0'::double precision)
   Foreign Table Size: 9 b
   Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(5 rows)

--Testcase 47:
SELECT id + id, c2, c3 || 'afas' FROM tbl04 WHERE floor(c2) > 0;
 ?column? |   c2    |    ?column?    
----------+---------+----------------
        2 |  128912 | anystringafas
        4 |    6565 | exampleafas
        6 | 1829812 | thingafas
        8 |     523 | !)@(#)!_#!afas
       10 |   22342 | (!)JAWLFJafas
       12 |    2121 | exampleafas
       14 |   23241 | thingafas
       16 |     316 | exampleafas
       18 |    8916 | thingafas
(9 rows)

--Testcase 48:
EXPLAIN VERBOSE
SELECT c2, c3, c4, c5 FROM tbl04 WHERE c5 > '2000-01-01';
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=49)
   Output: c2, c3, c4, c5
   Filter: (tbl04.c5 > 'Sat Jan 01 00:00:00 2000'::timestamp without time zone)
   Foreign Table Size: 9 b
   Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(5 rows)

--Testcase 49:
SELECT c2, c3, c4, c5 FROM tbl04 WHERE c5 > '2000-01-01';
  c2   |    c3     | c4 |            c5            
-------+-----------+----+--------------------------
 22342 | (!)JAWLFJ | f  | Mon Nov 01 00:00:00 2010
 23241 | thing     | f  | Fri Oct 01 00:00:00 2010
  8916 | thing     | f  | Fri Oct 01 10:10:00 2010
(3 rows)

--Testcase 50:
EXPLAIN VERBOSE
SELECT c5, c4, c2 FROM tbl04 WHERE c5 IN ('2000-01-01', '2010-11-01 00:00:00');
                                                      QUERY PLAN                                                       
-----------------------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=17)
   Output: c5, c4, c2
   Filter: (tbl04.c5 = ANY ('{"Sat Jan 01 00:00:00 2000","Mon Nov 01 00:00:00 2010"}'::timestamp without time zone[]))
   Foreign Table Size: 9 b
   Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(5 rows)

--Testcase 51:
SELECT c5, c4, c2 FROM tbl04 WHERE c5 IN ('2000-01-01', '2010-11-01 00:00:00');
            c5            | c4 |   c2    
--------------------------+----+---------
 Sat Jan 01 00:00:00 2000 | t  |  128912
 Sat Jan 01 00:00:00 2000 | f  |    6565
 Sat Jan 01 00:00:00 2000 | t  | 1829812
 Mon Nov 01 00:00:00 2010 | f  |   22342
(4 rows)

--Testcase 52:
EXPLAIN VERBOSE
SELECT c3, c5, c1 FROM tbl04 WHERE c1 > ALL(SELECT id FROM tbl04 WHERE c4 = true);
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=48)
   Output: tbl04.c3, tbl04.c5, tbl04.c1
   Filter: (SubPlan 1)
   Foreign Table Size: 9 b
   Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
   SubPlan 1
     ->  Materialize  (cost=25.00..34.05 rows=9 width=4)
           Output: tbl04_1.id
           ->  Foreign Scan on public.tbl04 tbl04_1  (cost=25.00..34.00 rows=9 width=4)
                 Output: tbl04_1.id
                 Filter: tbl04_1.c4
                 Foreign Table Size: 9 b
                 Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(13 rows)

--Testcase 53:
SELECT c3, c5, c1 FROM tbl04 WHERE c1 > ALL(SELECT id FROM tbl04 WHERE c4 = true);
     c3     |            c5            |    c1    
------------+--------------------------+----------
 anystring  | Sat Jan 01 00:00:00 2000 |    31.12
 example    | Sat Jan 01 00:00:00 2000 |  2565.56
 !)@(#)!_#! | Thu Nov 01 00:00:00 1990 |    55.23
 example    | Fri Oct 01 00:00:00 1999 | 45021.21
 thing      | Fri Oct 01 00:00:00 2010 | 121.9741
 example    | Fri Oct 01 10:10:00 1999 |       75
 thing      | Fri Oct 01 10:10:00 2010 |  6867.34
(7 rows)

--Testcase 54:
EXPLAIN VERBOSE
SELECT c1, c5, c3, c2 FROM tbl04 WHERE c1 = ANY (SELECT c1 FROM tbl04 WHERE c4 != false) AND c1 > 0 OR c2 < 0;
                                        QUERY PLAN                                         
-------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=56)
   Output: tbl04.c1, tbl04.c5, tbl04.c3, tbl04.c2
   Filter: (((hashed SubPlan 1) AND (tbl04.c1 > '0'::double precision)) OR (tbl04.c2 < 0))
   Foreign Table Size: 9 b
   Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
   SubPlan 1
     ->  Foreign Scan on public.tbl04 tbl04_1  (cost=25.00..34.00 rows=9 width=8)
           Output: tbl04_1.c1
           Filter: tbl04_1.c4
           Foreign Table Size: 9 b
           Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(11 rows)

--Testcase 55:
SELECT c1, c5, c3, c2 FROM tbl04 WHERE c1 = ANY (SELECT c1 FROM tbl04 WHERE c4 != false) AND c1 > 0 OR c2 < 0;
  c1   |            c5            |    c3     |   c2   
-------+--------------------------+-----------+--------
 31.12 | Sat Jan 01 00:00:00 2000 | anystring | 128912
(1 row)

--aggregation function push-down: add variance
--Testcase 56:
EXPLAIN VERBOSE
SELECT variance(c1), variance(c2) FROM tbl04;
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.06 rows=1 width=40)
   Output: variance(c1), variance(c2)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=16)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(6 rows)

--Testcase 57:
SELECT variance(c1), variance(c2) FROM tbl04;
     variance      |       variance        
-------------------+-----------------------
 218658330.4346485 | 363923108867.44444444
(1 row)

--Testcase 58:
EXPLAIN VERBOSE
SELECT variance(c1) FROM tbl04 WHERE c3 <> 'aef';
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Aggregate  (cost=34.02..34.03 rows=1 width=8)
   Output: variance(c1)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=8)
         Output: id, c1, c2, c3, c4, c5
         Filter: (tbl04.c3 <> 'aef'::text)
         Foreign Table Size: 9 b
         Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(7 rows)

--Testcase 59:
SELECT variance(c1) FROM tbl04 WHERE c3 <> 'aef';
     variance      
-------------------
 218658330.4346485
(1 row)

--Testcase 60:
EXPLAIN VERBOSE
SELECT max(id), min(c1), variance(c2) FROM tbl04;
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Aggregate  (cost=34.07..34.08 rows=1 width=44)
   Output: max(id), min(c1), variance(c2)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=20)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(6 rows)

--Testcase 61:
SELECT max(id), min(c1), variance(c2) FROM tbl04;
 max |   min    |       variance        
-----+----------+-----------------------
   9 | -121.122 | 363923108867.44444444
(1 row)

--Testcase 62:
EXPLAIN VERBOSE
SELECT variance(c2), variance(c1) FROM tbl04;
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.06 rows=1 width=40)
   Output: variance(c2), variance(c1)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=16)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(6 rows)

--Testcase 63:
SELECT variance(c2), variance(c1) FROM tbl04;
       variance        |     variance      
-----------------------+-------------------
 363923108867.44444444 | 218658330.4346485
(1 row)

--Testcase 64:
EXPLAIN VERBOSE
SELECT sum(c1), variance(c1) FROM tbl04 WHERE id <= 10;
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.06 rows=1 width=16)
   Output: sum(c1), variance(c1)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=8)
         Output: id, c1, c2, c3, c4, c5
         Filter: (tbl04.id <= 10)
         Foreign Table Size: 9 b
         Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(7 rows)

--Testcase 65:
SELECT sum(c1), variance(c1) FROM tbl04 WHERE id <= 10;
    sum     |     variance      
------------+-------------------
 54615.1921 | 218658330.4346485
(1 row)

--aggregation function push-down: having
--Testcase 66:
EXPLAIN VERBOSE
SELECT count(c1), sum(c2), variance(c2) FROM tbl04 HAVING (count(c1) > 0);
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Aggregate  (cost=34.07..34.09 rows=1 width=72)
   Output: count(c1), sum(c2), variance(c2)
   Filter: (count(tbl04.c1) > 0)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=16)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(7 rows)

--Testcase 67:
SELECT count(c1), sum(c2), variance(c2) FROM tbl04 HAVING (count(c1) > 0);
 count |   sum   |       variance        
-------+---------+-----------------------
     9 | 2022748 | 363923108867.44444444
(1 row)

--Testcase 68:
EXPLAIN VERBOSE
SELECT count(c1) + sum (c2), variance(c2)/2.12 FROM tbl04 HAVING count(c4) != 0 AND variance(c2) > 55.54;
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Aggregate  (cost=34.10..34.12 rows=1 width=64)
   Output: ((count(c1))::numeric + sum(c2)), (variance(c2) / 2.12)
   Filter: ((count(tbl04.c4) <> 0) AND (variance(tbl04.c2) > 55.54))
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=17)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT "id","c1","c2","c3","c4","c5" FROM "public"."tbl04"
(7 rows)

--Testcase 69:
SELECT count(c1) + sum (c2), variance(c2)/2.12 FROM tbl04 HAVING count(c4) != 0 AND variance(c2) > 55.54;
 ?column? |       ?column?        
----------+-----------------------
  2022757 | 171661843805.39832285
(1 row)

--Testcase 70:
DROP SERVER :DB_SERVERNAME CASCADE;
psql:sql/14.0/new_test.sql:184: NOTICE:  drop cascades to 5 other objects
DETAIL:  drop cascades to user mapping for public on server postgres_server
drop cascades to foreign table tbl01
drop cascades to foreign table tbl02
drop cascades to foreign table tbl03
drop cascades to foreign table tbl04
--Testcase 71:
DROP EXTENSION :DB_EXTENSIONNAME CASCADE;
